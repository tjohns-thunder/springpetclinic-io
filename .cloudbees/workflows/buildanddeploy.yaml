apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: feature_flag_deployment
on:
  push:
    branches:
      - "**"
  workflow_dispatch:
env:
  APP_NAME: spring-petclinic
  NAMESPACE: tjohnson #This will be changed to the SE's personal namespace
jobs:
  evidence-collection:
    outputs:
      commit_id: ${{ steps.commitinfo.outputs.commit_id }}
      commit_msg: ${{ steps.commitinfo.outputs.commit_msg }}
      jira_key: ${{ steps.commitinfo.outputs.jira_key }}
    steps:
      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Get Commit Info
        uses: docker://alpine/git:latest
        id: commitinfo
        run: |
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit ID: $COMMIT_ID"
          echo "Commit Message: $COMMIT_MSG"
          # Extract the JIRA issue key (assuming format like PROJECTKEY-123)
          JIRA_KEY=$(echo "$COMMIT_MSG" | grep -oE "[A-Z]+-[0-9]+")
          if [ -z "$JIRA_KEY" ]; then
            echo "Error: Commit message must include a valid JIRA issue key." >&2
            exit 1
          fi
          echo "${COMMIT_ID}" >> $CLOUDBEES_OUTPUTS/commit_id
          echo "${COMMIT_MSG}" >> $CLOUDBEES_OUTPUTS/commit_msg
          echo "${JIRA_KEY}" >> $CLOUDBEES_OUTPUTS/jira_key
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## JIRA Information
            - **JIRA Issue Key:** "${{ steps.commitinfo.outputs.jira_key }}"
            ## Commit Information
            - **Commit ID:** "${{ steps.commitinfo.outputs.commit_id }}"
            - **Commit Message:** "${{ steps.commitinfo.outputs.commit_msg }}" 
          format: MARKDOWN
  unit-tests:
    outputs:
      unitTestResults: ${{ steps.RunUnitTest.outputs.mvn_test_stdio1 }}
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: RunUnitTest
        id: RunUnitTest
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn test > "$CLOUDBEES_OUTPUTS/mvn_test_stdio"
          cat "$CLOUDBEES_OUTPUTS/mvn_test_stdio" | grep "Tests run:" | tail -1 > "$CLOUDBEES_OUTPUTS/mvn_test_stdio1"
      - uses: cloudbees-io/publish-test-results@v1
        name: test
        kind: test
        with:
          test-type: JUnit
          folder-name: /cloudbees/workspace/target/surefire-reports/*.xml
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## Unit Test Results
            - **Unit Test Results:** "${{ steps.RunUnitTest.outputs.mvn_test_stdio1 }}"
            ## Code Coverage Report
            ${{vars.PETCLINIC_UT_RESULTS}} 
          format: MARKDOWN
    needs:
      - evidence-collection
  package:
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Configure container registry credentials
        id: dockerconfig
        uses: cloudbees-io/configure-oci-credentials@v1
        with:
          registry: https://index.docker.io/v1/
          username: ${{ secrets.DOCKERHUB_STAGE_USERNAME }}
          password: ${{ secrets.DOCKERHUB_STAGE_PASSWORD }}
      - uses: cloudbees-io/kaniko@v1
        name: Build and push docker image
        kind: build
        with:
          destination: ${{ secrets.DOCKERHUB_STAGE_USERNAME }}/spring-petclinic:${{ cloudbees.scm.sha }},${{ secrets.DOCKERHUB_STAGE_USERNAME }}/springpet-clinic:latest
          tar-path: container-image.tar
          build-args: BUILDKIT_CONTEXT_KEEP_GIT_DIR=1,BUILDKIT_INLINE_CACHE=1
      # - uses: calculi-corp/assets-plugin-chain-utils/upload-binary@v1
      #   name: Upload binary from container build
      #   continue-on-error: true
      #   id: upload-binary
      #   with:
      #     file-path: container-image.tar
      #     file-type: BINARY_CONTAINER
      #     debug: "true"
    needs:
      - static-analysis
      - sca-scan
      - unit-tests
      - sast-scan
  static-analysis:
    outputs:
      BLOCKER_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.BLOCKER_COUNT }}
      CRITICAL_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.CRITICAL_COUNT }}
      MAJOR_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.MAJOR_COUNT }}
      MINOR_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.MINOR_COUNT }}
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Scan with Find Security Bugs
        uses: cloudbees-io/findsecbugs-sast-scan-code@v1
        with:
          language: LANGUAGE_JAVA
      - name: Scan with SonarQube bundled
        uses: cloudbees-io/sonarqube-bundled-sast-scan-code@v1
        with:
          sonar-exclusion: src/main/java
          cover-file-name: ./pom.xml
          language: LANGUAGE_JAVA
      - name: Fetch SonarQube Issues
        id: FetchSonarQubeIssues
        uses: docker://alpine/git:latest
        run: |
          apk add --no-cache curl jq
          curl -u ${{ secrets.username }}:${{ secrets.password }} \
          "https://sonarqube.cb-demos.io/api/issues/search?componentKeys=${{ secrets.SONAR_PROJECT_KEY }}&severities=BLOCKER,CRITICAL,MAJOR,MINOR" \
          -o sonar-issues.json
          BLOCKER_COUNT=$(jq '[.issues[] | select(.severity=="BLOCKER")] | length' sonar-issues.json)
          CRITICAL_COUNT=$(jq '[.issues[] | select(.severity=="CRITICAL")] | length' sonar-issues.json)
          MAJOR_COUNT=$(jq '[.issues[] | select(.severity=="MAJOR")] | length' sonar-issues.json)
          MINOR_COUNT=$(jq '[.issues[] | select(.severity=="MINOR")] | length' sonar-issues.json)

          echo "BLOCKER_COUNT=${BLOCKER_COUNT}" >> $CLOUDBEES_OUTPUTS/BLOCKER_COUNT
          echo "CRITICAL_COUNT=${CRITICAL_COUNT}" >> $CLOUDBEES_OUTPUTS/CRITICAL_COUNT
          echo "MAJOR_COUNT=${MAJOR_COUNT}" >> $CLOUDBEES_OUTPUTS/MAJOR_COUNT
          echo "MINOR_COUNT=${MINOR_COUNT}" >> $CLOUDBEES_OUTPUTS/MINOR_COUNT
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## SonarQube Analysis Results

            | Severity             | Issue Count |
            |----------------------|-------------|
            | BLOCKER_COUNT        | ${{ steps.FetchSonarQubeIssues.outputs.BLOCKER_COUNT }} |
            | CRITICAL_COUNT       | ${{ steps.FetchSonarQubeIssues.outputs.CRITICAL_COUNT }} |
            | MAJOR_COUNT          | ${{ steps.FetchSonarQubeIssues.outputs.MAJOR_COUNT }} |
            | MINOR_COUNT          | ${{ steps.FetchSonarQubeIssues.outputs.MINOR_COUNT }} |
          format: MARKDOWN
    needs:
      - evidence-collection
  container-scan:
    steps:
      - name: Scan with Snyk Container
        uses: cloudbees-io/snyk-scan-container@v1
        with:
          orgname: ${{ secrets.SNYK_ORGNAME }}
          token: ${{ secrets.SNYK_TOKEN }}
          image-location: ${{ secrets.DOCKERHUB_STAGE_USERNAME }}/spring-petclinic
          image-tag: ${{ cloudbees.scm.sha }}
    needs: package
  sast-scan:
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cloudbees-io/snyk-sast-scan-code@v1
        name: Scan with Snyk SAST
        kind: scan
        with:
          orgname: ${{ secrets.SNYK_ORGNAME }}
          token: ${{ secrets.SNYK_TOKEN }}
          language: LANGUAGE_JAVA
    needs:
      - evidence-collection
  sca-scan:
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cloudbees-io/snyk-sca-scan-dependency@v1
        name: Scan with Snyk SCA
        kind: scan
        with:
          orgname: ${{ secrets.SNYK_ORGNAME }}
          token: ${{ secrets.SNYK_TOKEN }}
          language: LANGUAGE_JAVA
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ${{vars.PETCLINIC_SCA_SCAN_RESULTS}} 
          format: MARKDOWN                  
    needs: 
      - evidence-collection
  exit_gate:
    environment: tjohns_DEV
    steps:
      - uses: cloudbees-io/publish-evidence-item@v1
        name: Publish Results
        with:
          content: |-
            ## Exit Gates Results
            ${{vars.PETCLINIC_DEV_EXIT_GATE}} 
          format: MARKDOWN
      - uses: docker://maven:3-eclipse-temurin-17
        name: Manual Approval
        run: |
          echo "Manual approval required before proceeding to deployment."
    needs: 
      - deploy_dev
  smokeTest_dev:
    steps:
      - uses: cloudbees-io/checkout@v1
        name: Checkout
      - uses: docker://maven:3-eclipse-temurin-17
        name: Smoke Test
        run: |
          mvn test
      - name: Publish Results
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: "${{vars.PETCLINIC_SMOKETEST_DEV_RESULTS}} "
          format: MARKDOWN
    needs: 
      - deploy_dev
  deploy_dev:
    environment: tjohns_DEV #This will be changed to SE's created DEV environment ex: tjohns_DEV
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cashokannamalai/kubeconfig@v1
        name: Set kubeconfig
        with:
          secname: ${{ secrets.kubeconfig }}
      - id: install-chart
        name: Install helm chart
        uses: cloudbees-io/helm-install@v1
        with:
          chart-location: ${{ cloudbees.workspace }}/chart
          release-name: ${{ env.APP_NAME }}
          namespace: ${{ env.NAMESPACE }}-dev
          values: |
            image:
              repository: ${{ secrets.DOCKERHUB_STAGE_USERNAME }}/spring-petclinic
              tag: ${{ cloudbees.scm.sha }}
            fmKey: ${{ secrets.FM_TOKEN }}
            hostname: ${{ env.NAMESPACE }}-petclinic-dev.preview.cb-demos.io
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## Deployed environment
            [Dev frontend](https://${{ env.NAMESPACE }}-petclinic-dev.preview.cb-demos.io/)

            Running spring-petclinic:${{ cloudbees.scm.sha }}
          format: MARKDOWN
    needs:
      - container-scan
  deploy_qa:
    environment: tjohns_QA #This will be changed to SE's created QA environment ex: tjohns_QA
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cashokannamalai/kubeconfig@v1
        name: Set kubeconfig
        with:
          secname: ${{ secrets.kubeconfig }}
      - id: install-chart
        name: Install helm chart
        uses: cloudbees-io/helm-install@v1
        with:
          chart-location: ${{ cloudbees.workspace }}/chart
          release-name: ${{ env.APP_NAME }}
          namespace: ${{ env.NAMESPACE }}-qa
          values: |
            image:
              repository: ${{ secrets.DOCKERHUB_STAGE_USERNAME }}/spring-petclinic
              tag: ${{ cloudbees.scm.sha }}
            fmKey: ${{ secrets.FM_TOKEN }}
            hostname: ${{ env.NAMESPACE }}-petclinic-qa.preview.cb-demos.io
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## Deployed environment
            [QA frontend](https://${{ env.NAMESPACE }}-petclinic-qa.preview.cb-demos.io/)

            Running spring-petclinic:${{ cloudbees.scm.sha }}
          format: MARKDOWN
    needs: 
      - exit_gate
  smokeTest_qa:
    steps:
      - uses: cloudbees-io/checkout@v1
        name: Checkout
      - uses: docker://maven:3-eclipse-temurin-17
        name: Smoke Test
        run: |
          mvn test
      - name: Publish Results
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: "${{vars.PETCLINIC_SMOKETEST_QA_RESULTS}} "
          format: MARKDOWN
    needs: 
      - deploy_qa
  deploy_prod:
    environment: tjohns_PROD #This will be changed to SE's created PROD environment ex: tjohns_PROD
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cashokannamalai/kubeconfig@v1
        name: Set kubeconfig
        with:
          secname: ${{ secrets.kubeconfig }}
      - id: install-chart
        name: Install helm chart
        uses: cloudbees-io/helm-install@v1
        with:
          chart-location: ${{ cloudbees.workspace }}/chart
          release-name: ${{ env.APP_NAME }}
          namespace: ${{ env.NAMESPACE }}-prod
          values: |
            image:
              repository: ${{ secrets.DOCKERHUB_STAGE_USERNAME }}/spring-petclinic
              tag: ${{ cloudbees.scm.sha }}
            fmKey: ${{ secrets.FM_TOKEN }}
            hostname: ${{ env.NAMESPACE }}-petclinic-prod.preview.cb-demos.io
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## Deployed environment
            [Production frontend](https://${{ env.NAMESPACE }}-petclinic-prod.preview.cb-demos.io/)

            Running spring-petclinic:${{ cloudbees.scm.sha }}
          format: MARKDOWN
    needs: 
      - deploy_qa
  smokeTest_prod:
    steps:
      - uses: cloudbees-io/checkout@v1
        name: Checkout
      - uses: docker://maven:3-eclipse-temurin-17
        name: Smoke Test
        run: |
          mvn test
      - name: Publish Results
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: "${{vars.PETCLINIC_SMOKETEST_PROD_RESULTS}} "
          format: MARKDOWN
    needs: 
      - deploy_prod
